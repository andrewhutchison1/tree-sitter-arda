===
pat.ident
===
a ?= 4
---
(chunk
    (match_expression
        (identifier)
        (int_literal)))

===
pat.pin
===
^a ?= 4
---
(chunk
    (match_expression
        (pin_pattern)
        (int_literal)))

===
pat.tuple
===
(a, b) ?= test;
(...a) ?= test;
(...) ?= test;
(a, ...b) ?= test;
(a, (b, c)) ?= test;
(a, (^b, c)) ?= test;
---
(chunk
    (match_expression
        (tuple_pattern (identifier) (identifier))
        (identifier))
    (match_expression
        (tuple_pattern (gather_pattern (identifier)))
        (identifier))
    (match_expression
        (tuple_pattern (gather_pattern))
        (identifier))
    (match_expression
        (tuple_pattern
            (identifier)
            (gather_pattern (identifier)))
        (identifier))
    (match_expression
        (tuple_pattern
            (identifier)
            (tuple_pattern (identifier) (identifier)))
        (identifier))
    (match_expression
        (tuple_pattern
            (identifier)
            (tuple_pattern (pin_pattern) (identifier)))
        (identifier)))

===
pat.record
===
if {a, b} ?= test then
    true
end;

if {a=x, b=y} ?= {a=0, b=1} then
    x + y
end
---
(chunk
    (if_expression
        cond: (match_expression
            L: (record_pattern (identifier) (identifier))
            R: (identifier))
        then: (bool_literal))
    (if_expression
        cond: (match_expression
            L: (record_pattern
                (pair_pattern (identifier) (identifier))
                (pair_pattern (identifier) (identifier)))
            R: (record_literal
                (pair (identifier) (int_literal))
                (pair (identifier) (int_literal))))
        then: (add_expression
            L: (identifier)
            R: (identifier))))