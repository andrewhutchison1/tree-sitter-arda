===
lit.nil
===
();
( );
---
(chunk
    (nil_literal)
    (nil_literal))

===
lit.sym
===
:symbol;
:_;
:_s;
---
(chunk
    (sym_literal)
    (sym_literal)
    (sym_literal))

===
lit.bool
===
true; false;
---
(chunk
    (bool_literal)
    (bool_literal))

===
lit.int
===
0;      1010101;    000000000;      0123456789;
1_0_1;  0123_456;   0_12345_678_9;  0000000000_0;

0x0;   0x000;    0x0123456789abcdefABCDEF; 0X0123456789abcdefABCDEF;
0x_0;  0x0_0;    0x0_12345_6_789abcdefAB_C_DEF; 0X_01_2345_6789_abcd_efAB_CDEF;

0b0;    0b1010101;  0b11111;    0b00000000;
0b_0;   0b1_0_1_0;  0b11_11_1;  0b00000000_00000000;

0o0;    0o01234567; 0o000000000; 0o777777777;
0o_0;    0o0_1234567; 0o_000000_0_0_0; 0o777_777_777;
---
(chunk
    (int_literal) (int_literal) (int_literal) (int_literal)
    (int_literal) (int_literal) (int_literal) (int_literal)
    (int_literal) (int_literal) (int_literal) (int_literal)
    (int_literal) (int_literal) (int_literal) (int_literal)
    (int_literal) (int_literal) (int_literal) (int_literal)
    (int_literal) (int_literal) (int_literal) (int_literal)
    (int_literal) (int_literal) (int_literal) (int_literal)
    (int_literal) (int_literal) (int_literal) (int_literal))

===
lit.float.dec
===
1e1;
0.0;
.1;
.1E-3
---
(chunk
    (float_literal)
    (float_literal)
    (float_literal)
    (float_literal))

===
lit.float.hex
===
0xfp1;
0xf.p1;
0xf.p3;
0xa.abcP-2;
---
(chunk
    (float_literal)
    (float_literal)
    (float_literal)
    (float_literal))

===
lit.str.squote
===
'';
'hello';
'\n\r\t\0\x0a\uABCD\u{0}'
---
(chunk
    (str_literal)
    (str_literal)
    (str_literal
        (escape_sequence)
        (escape_sequence)
        (escape_sequence)
        (escape_sequence)
        (escape_sequence)
        (escape_sequence)
        (escape_sequence)))

===
lit.str.dquote
===
"";
"a";
"hello";
"\n\r\t\0\x0a\uABCD\u{0}"
---
(chunk
    (str_literal)
    (str_literal)
    (str_literal)
    (str_literal
        (escape_sequence)
        (escape_sequence)
        (escape_sequence)
        (escape_sequence)
        (escape_sequence)
        (escape_sequence)
        (escape_sequence)))

===
lit.str.joined
===
"a" "b";
"a" '\n' "a\n"
---
(chunk
    (str_literal)
    (str_literal (escape_sequence) (escape_sequence)))

===
lit.tuple
===
(0,);
(0,0);
---
(chunk
    (tuple_literal (int_literal))
    (tuple_literal (int_literal) (int_literal)))

===
lit.record
===
{};
{a=0};
{:a=1,};
{a=0,b=1};
{'a'=3, "b"='g'}
---
(chunk
    (record_literal)
    (record_literal
        (record_pair (identifier) (int_literal)))
    (record_literal
        (record_pair (sym_literal) (int_literal)))
    (record_literal
        (record_pair (identifier) (int_literal))
        (record_pair (identifier) (int_literal)))
    (record_literal
        (record_pair (str_literal) (int_literal))
        (record_pair (str_literal) (str_literal))))